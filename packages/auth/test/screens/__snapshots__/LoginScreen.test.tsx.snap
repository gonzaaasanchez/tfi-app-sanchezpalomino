// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoginScreen should match snapshot when loading 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Text>
    loginScreen.loading
  </Text>
</View>
`;

exports[`LoginScreen should match snapshot with default state 1`] = `
<View
  onLayout={[Function]}
  style={
    [
      {
        "backgroundColor": "#f8f9fa",
        "flex": 1,
        "justifyContent": "center",
      },
      {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    accessible={false}
    style={
      {
        "flex": 1,
        "justifyContent": "center",
        "padding": 24,
      }
    }
  >
    <Text
      style={
        {
          "color": "#333",
          "fontSize": 32,
          "fontWeight": "600",
          "marginBottom": 24,
          "textAlign": "center",
        }
      }
      testID="loginScreen.title"
    >
      loginScreen.title
    </Text>
    <TextInput
      autoCapitalize="none"
      autoCorrect={false}
      keyboardType="email-address"
      onChangeText={[MockFunction]}
      placeholder="loginScreen.email"
      placeholderTextColor="#aaa"
      style={
        {
          "backgroundColor": "#fff",
          "borderColor": "#ddd",
          "borderRadius": 8,
          "borderWidth": 1,
          "height": 48,
          "marginBottom": 16,
          "paddingHorizontal": 16,
        }
      }
      testID="loginScreen.email"
      textContentType="emailAddress"
      value=""
    />
    <TextInput
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[MockFunction]}
      placeholder="loginScreen.password"
      placeholderTextColor="#aaa"
      secureTextEntry={true}
      style={
        {
          "backgroundColor": "#fff",
          "borderColor": "#ddd",
          "borderRadius": 8,
          "borderWidth": 1,
          "height": 48,
          "marginBottom": 16,
          "paddingHorizontal": 16,
        }
      }
      testID="loginScreen.password"
      textContentType="oneTimeCode"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#007bff",
          "borderRadius": 8,
          "height": 48,
          "justifyContent": "center",
          "marginTop": 16,
          "opacity": 1,
        }
      }
      testID="loginScreen.login"
    >
      <Text
        style={
          {
            "color": "#fff",
            "fontSize": 16,
            "fontWeight": "600",
          }
        }
      >
        loginScreen.login
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "marginTop": 24,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="loginScreen.register"
      >
        <Text
          style={
            {
              "color": "#007bff",
              "fontSize": 14,
              "marginVertical": 8,
            }
          }
        >
          loginScreen.register
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="loginScreen.forgotPassword"
      >
        <Text
          style={
            {
              "color": "#007bff",
              "fontSize": 14,
              "marginVertical": 8,
            }
          }
        >
          loginScreen.forgotPassword
        </Text>
      </View>
    </View>
  </View>
</View>
`;
