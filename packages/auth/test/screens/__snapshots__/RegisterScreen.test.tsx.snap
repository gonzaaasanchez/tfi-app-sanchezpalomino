// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegisterScreen should match snapshot when loading 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Text>
    registerScreen.loading
  </Text>
</View>
`;

exports[`RegisterScreen should match snapshot with default state 1`] = `
<View
  onLayout={[Function]}
  style={
    [
      {
        "backgroundColor": "#f8f9fa",
        "flex": 1,
        "justifyContent": "center",
      },
      {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    accessible={false}
    style={
      {
        "flex": 1,
        "justifyContent": "center",
        "padding": 24,
      }
    }
  >
    <Text
      style={
        {
          "color": "#333",
          "fontSize": 32,
          "fontWeight": "600",
          "marginBottom": 24,
          "textAlign": "center",
        }
      }
      testID="registerScreen.title"
    >
      registerScreen.title
    </Text>
    <TextInput
      autoCapitalize="words"
      autoCorrect={false}
      onChangeText={[MockFunction]}
      placeholder="registerScreen.name"
      placeholderTextColor="#aaa"
      style={
        {
          "backgroundColor": "#fff",
          "borderColor": "#ddd",
          "borderRadius": 8,
          "borderWidth": 1,
          "height": 48,
          "marginBottom": 16,
          "paddingHorizontal": 16,
        }
      }
      testID="registerScreen.name"
      value=""
    />
    <TextInput
      autoCapitalize="none"
      autoCorrect={false}
      keyboardType="email-address"
      onChangeText={
        [MockFunction] {
          "calls": [
            [
              "",
            ],
          ],
          "results": [
            {
              "type": "return",
              "value": undefined,
            },
          ],
        }
      }
      placeholder="registerScreen.email"
      placeholderTextColor="#aaa"
      style={
        {
          "backgroundColor": "#fff",
          "borderColor": "#ddd",
          "borderRadius": 8,
          "borderWidth": 1,
          "height": 48,
          "marginBottom": 16,
          "paddingHorizontal": 16,
        }
      }
      testID="registerScreen.email"
      textContentType="emailAddress"
      value=""
    />
    <TextInput
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[MockFunction]}
      placeholder="registerScreen.password"
      placeholderTextColor="#aaa"
      secureTextEntry={true}
      style={
        {
          "backgroundColor": "#fff",
          "borderColor": "#ddd",
          "borderRadius": 8,
          "borderWidth": 1,
          "height": 48,
          "marginBottom": 16,
          "paddingHorizontal": 16,
        }
      }
      testID="registerScreen.password"
      textContentType="oneTimeCode"
      value=""
    />
    <TextInput
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[MockFunction]}
      placeholder="registerScreen.confirmPassword"
      placeholderTextColor="#aaa"
      secureTextEntry={true}
      style={
        {
          "backgroundColor": "#fff",
          "borderColor": "#ddd",
          "borderRadius": 8,
          "borderWidth": 1,
          "height": 48,
          "marginBottom": 16,
          "paddingHorizontal": 16,
        }
      }
      testID="registerScreen.confirmPassword"
      textContentType="oneTimeCode"
      value=""
    />
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#007bff",
          "borderRadius": 8,
          "height": 48,
          "justifyContent": "center",
          "marginTop": 16,
          "opacity": 1,
        }
      }
      testID="registerScreen.register"
    >
      <Text
        style={
          {
            "color": "#fff",
            "fontSize": 16,
            "fontWeight": "600",
          }
        }
      >
        registerScreen.register
      </Text>
    </View>
  </View>
</View>
`;
